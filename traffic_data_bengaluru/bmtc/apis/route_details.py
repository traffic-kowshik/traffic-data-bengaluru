# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/bmtc/apis/06_route_details.ipynb.

# %% auto 0
__all__ = ['logger', 'fetch_route_details', 'extract_route_details', 'extract_map_data']

# %% ../../../nbs/bmtc/apis/06_route_details.ipynb 7
import json
import time
from tqdm import tqdm

import requests
import pandas as pd
pd.set_option('display.max_columns', None)

from ...utils import *
from .vehicles import get_vehicles

# %% ../../../nbs/bmtc/apis/06_route_details.ipynb 8
import logging
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s"
)
logger = logging.getLogger(__name__)

# %% ../../../nbs/bmtc/apis/06_route_details.ipynb 11
def fetch_route_details(route_id: int, sleep_duration: float = 0.1):
    """Fetch route details for a given route ID from the BMTC API."""
    time.sleep(sleep_duration)
    url = "https://bmtcmobileapi.karnataka.gov.in/WebAPI/SearchByRouteDetails_v4"

    headers = {
        "Content-Type": "application/json",
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36",
        "deviceType": "WEB",
        'lan': 'en'
    }

    payload = json.dumps({"routeid": int(route_id)})
    try:
        response = requests.post(url, headers=headers, data=payload)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")
        print("Response text:", getattr(e.response, "text", None))
        return None

# %% ../../../nbs/bmtc/apis/06_route_details.ipynb 14
def extract_route_details(route_details):
    details = []
    directions = ['up', 'down']
    for direction in directions:
        stations = route_details[direction]['data']
        for station in stations:
            for vehicle in station['vehicleDetails']:
                detail = {**vehicle, **{k: v for k, v in station.items() if k != "vehicleDetails"}}
                detail['direction'] = direction
                details.append(detail)
    df_details = pd.DataFrame(details)
    return df_details

# %% ../../../nbs/bmtc/apis/06_route_details.ipynb 17
def extract_map_data(route_details):
    map_data = []
    directions = ['up', 'down']
    for direction in directions:
        vehicles = route_details[direction]['mapData']
        map_data += vehicles
    df_map_data = pd.DataFrame(map_data)
    return df_map_data
